<template>
    <AuthenticatedLayout>
        <Head title="Utilisateurs" />
        
        <div class="container mx-auto px-4 py-6">
            <!-- Header avec titre et bouton création -->
            <div class="flex justify-between items-center mb-6">
                <h1 class="text-xl sm:text-2xl xl:text-3xl font-bold text-white truncate">
                    Gestion des utilisateurs
                </h1>
                <Link
                    v-if="can?.create"
                    href="/users/create"
                    class="inline-flex items-center px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors"
                >
                    <UserPlusIcon class="w-5 h-5 mr-2" />
                    Nouvel utilisateur
                </Link>
            </div>
            
            <!-- Table simplifiée -->
            <div class="bg-white/10 backdrop-blur-sm rounded-lg shadow overflow-hidden">
                <div class="overflow-x-auto">
                    <table class="min-w-full divide-y divide-gray-700">
                        <thead class="bg-black/20">
                            <tr>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">
                                    Nom
                                </th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">
                                    Email
                                </th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">
                                    Rôle
                                </th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">
                                    Statut
                                </th>
                                <th class="px-6 py-3 text-right text-xs font-medium text-gray-300 uppercase tracking-wider w-24">
                                    Actions
                                </th>
                            </tr>
                        </thead>
                        <tbody class="divide-y divide-gray-700">
                            <tr
                                v-for="user in users?.data || []"
                                :key="user.id"
                                class="hover:bg-white/5 group"
                            >
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="flex items-center">
                                        <div class="flex-shrink-0 h-10 w-10">
                                            <div class="h-10 w-10 rounded-full bg-blue-500 flex items-center justify-center text-white font-semibold">
                                                {{ (user.name || 'U').charAt(0).toUpperCase() }}
                                            </div>
                                        </div>
                                        <div class="ml-4">
                                            <div class="text-sm font-medium text-white">
                                                {{ user.name || 'Sans nom' }}
                                            </div>
                                        </div>
                                    </div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="text-sm text-gray-300">{{ user.email }}</div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <span
                                        v-if="user.roles && user.roles.length > 0"
                                        class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full"
                                        :class="getRoleBadgeClass(user.roles[0].name)"
                                    >
                                        {{ formatRole(user.roles[0].name) }}
                                    </span>
                                    <span v-else class="text-gray-400 text-sm">-</span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <span
                                        class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full"
                                        :class="user.active ? 'bg-green-900/50 text-green-400' : 'bg-red-900/50 text-red-400'"
                                    >
                                        {{ user.active ? 'Actif' : 'Inactif' }}
                                    </span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium w-24">
                                    <div class="flex items-center justify-end space-x-2 opacity-0 group-hover:opacity-100 transition-opacity duration-200">
                                        <Link
                                            :href="`/users/${user.id}/edit`"
                                            class="p-1.5 text-blue-400 hover:text-blue-300 hover:bg-blue-900/50 rounded-lg transition-all"
                                            title="Modifier"
                                        >
                                            <PencilIcon class="w-4 h-4" />
                                        </Link>
                                        <button
                                            @click="toggleUserStatus(user)"
                                            class="p-1.5 hover:bg-gray-700/50 rounded-lg transition-all"
                                            :class="user.active ? 'text-orange-400 hover:text-orange-300' : 'text-green-400 hover:text-green-300'"
                                            :title="user.active ? 'Désactiver' : 'Activer'"
                                        >
                                            <component :is="user.active ? XCircleIcon : CheckCircleIcon" class="w-4 h-4" />
                                        </button>
                                        <button
                                            @click="confirmDelete(user)"
                                            class="p-1.5 text-red-400 hover:text-red-300 hover:bg-red-900/50 rounded-lg transition-all"
                                            title="Supprimer"
                                        >
                                            <TrashIcon class="w-4 h-4" />
                                        </button>
                                    </div>
                                </td>
                            </tr>
                            <tr v-if="!users?.data || users.data.length === 0">
                                <td colspan="5" class="px-6 py-4 text-center text-gray-400">
                                    Aucun utilisateur trouvé
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                
                <!-- Pagination -->
                <div v-if="users?.links && users.links.length > 3" class="bg-black/20 px-4 py-3 border-t border-gray-700">
                    <nav class="flex items-center justify-between">
                        <div class="flex-1 flex items-center justify-between">
                            <div>
                                <p class="text-sm text-gray-300">
                                    Affichage de
                                    <span class="font-medium">{{ users.from || 0 }}</span>
                                    à
                                    <span class="font-medium">{{ users.to || 0 }}</span>
                                    sur
                                    <span class="font-medium">{{ users.total || 0 }}</span>
                                    résultats
                                </p>
                            </div>
                            <div class="flex space-x-2">
                                <template v-for="link in users.links" :key="link.label">
                                    <Link
                                        v-if="link.url"
                                        :href="link.url"
                                        v-html="link.label"
                                        class="px-3 py-1 text-sm rounded-md transition-colors"
                                        :class="link.active ? 'bg-blue-600 text-white' : 'bg-gray-700 text-gray-300 hover:bg-gray-600'"
                                        preserveScroll
                                    />
                                    <span
                                        v-else
                                        v-html="link.label"
                                        class="px-3 py-1 text-sm text-gray-500"
                                    />
                                </template>
                            </div>
                        </div>
                    </nav>
                </div>
            </div>
        </div>
    </AuthenticatedLayout>
</template>

<script setup>
import { Head, Link, router } from '@inertiajs/vue3'
import AuthenticatedLayout from '@/Layouts/AuthenticatedLayout.vue'
import { 
    UserPlusIcon, 
    PencilIcon, 
    TrashIcon, 
    XCircleIcon,
    CheckCircleIcon
} from '@heroicons/vue/24/outline'

const props = defineProps({
    users: {
        type: Object,
        default: () => ({ data: [], links: [], from: 0, to: 0, total: 0 })
    },
    filters: {
        type: Object,
        default: () => ({})
    },
    roles: {
        type: Array,
        default: () => []
    },
    can: {
        type: Object,
        default: () => ({ create: false, update: false, delete: false })
    }
})

const formatRole = (role) => {
    const roleLabels = {
        'superadmin': 'Super Admin',
        'admin_ecole': 'Administrateur',
        'instructeur': 'Instructeur',
        'membre': 'Membre'
    }
    return roleLabels[role] || role || '-'
}

const getRoleBadgeClass = (role) => {
    const classes = {
        'superadmin': 'bg-purple-900/50 text-purple-400',
        'admin_ecole': 'bg-blue-900/50 text-blue-400',
        'instructeur': 'bg-yellow-900/50 text-yellow-400',
        'membre': 'bg-gray-700 text-gray-300'
    }
    return classes[role] || 'bg-gray-700 text-gray-300'
}

const toggleUserStatus = (user) => {
    if (!user?.id) return
    router.post(`/users/${user.id}/toggle-status`, {}, {
        preserveScroll: true
    })
}

const confirmDelete = (user) => {
    if (!user?.id) return
    if (confirm(`Êtes-vous sûr de vouloir supprimer l'utilisateur ${user.name} ?`)) {
        router.delete(`/users/${user.id}`, {
            preserveScroll: true
        })
    }
}
</script>
