# StudiosDB - Configuration Nginx sécurisée pour 4lb.ca
# Path: /etc/nginx/sites-available/4lb.ca

server {
    listen 80;
    listen [::]:80;
    server_name 4lb.ca www.4lb.ca;
    
    # Redirection forcée vers HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name 4lb.ca www.4lb.ca;
    
    # Document root
    root /home/studiosdb/studiosunisdb/public;
    index index.php;
    
    # SSL - Certificats gérés par Cloudflare ou Let's Encrypt
    # Option 1: Cloudflare Origin Certificate
    ssl_certificate /etc/nginx/ssl/4lb.ca/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/4lb.ca/key.pem;
    
    # Option 2: Let's Encrypt (si pas derrière Cloudflare proxy)
    # ssl_certificate /etc/letsencrypt/live/4lb.ca/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/4lb.ca/privkey.pem;
    
    # Configuration SSL sécurisée
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # Security Headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # CSP pour permettre reCAPTCHA
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://www.google.com https://www.gstatic.com https://www.recaptcha.net; frame-src 'self' https://www.google.com https://www.recaptcha.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' data: https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://www.google.com;" always;
    
    # Logs
    access_log /var/log/nginx/4lb.ca.access.log;
    error_log /var/log/nginx/4lb.ca.error.log;
    
    # Taille max upload (pour photos membres)
    client_max_body_size 10M;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml application/atom+xml image/svg+xml text/javascript application/vnd.ms-fontobject application/x-font-ttf font/opentype;
    
    # Rate limiting pour l'inscription
    location ~ ^/(register|register-membre|api/register) {
        limit_req zone=register burst=3 nodelay;
        limit_req_status 429;
        try_files $uri $uri/ /index.php?$query_string;
    }
    
    # Protection des dossiers sensibles
    location ~ /\.(?!well-known) {
        deny all;
    }
    
    location ~ ^/(storage|bootstrap/cache)/ {
        deny all;
    }
    
    # Laravel routing
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }
    
    # PHP-FPM configuration
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        
        # PHP 8.3 FPM
        fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;
        # Ou si utilisation de port
        # fastcgi_pass 127.0.0.1:9000;
        
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
        
        # Optimisations FastCGI
        fastcgi_buffer_size 16k;
        fastcgi_buffers 8 16k;
        fastcgi_read_timeout 240;
        
        # Variables Laravel
        fastcgi_param APP_ENV production;
        fastcgi_param HTTPS on;
    }
    
    # Assets statiques avec cache long
    location ~* \.(jpg|jpeg|gif|png|css|js|ico|xml|svg|woff|woff2|ttf|eot)$ {
        expires 30d;
        add_header Cache-Control "public, immutable";
    }
    
    # Health check endpoint
    location = /health {
        access_log off;
        add_header Content-Type text/plain;
        return 200 "OK";
    }
    
    # Block common attack patterns
    location ~* (\.php$|\.aspx$|\.asp$|\.jsp$|\.cgi$) {
        return 404;
    }
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=register:10m rate=5r/m;
limit_req_zone $binary_remote_addr zone=api:10m rate=30r/m;
