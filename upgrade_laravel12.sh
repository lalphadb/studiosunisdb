#!/bin/bash

# =============================================================================
# STUDIOSDB V5 PRO - MISE √Ä JOUR LARAVEL 12.x
# Mise √† jour automatis√©e de Laravel 11.x vers Laravel 12.x
# =============================================================================

echo "üöÄ MISE √Ä JOUR LARAVEL 12.x - STUDIOSDB V5 PRO"
echo "=============================================="

cd /home/studiosdb/studiosunisdb/studiosdb_v5_pro

# Variables
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# =============================================================================
# √âTAPE 1: V√âRIFICATIONS PR√âALABLES
# =============================================================================

echo -e "\n${BLUE}üìã √âTAPE 1: V√âRIFICATIONS PR√âALABLES${NC}"

# V√©rifier version PHP
echo "üîç V√©rification version PHP..."
PHP_VERSION=$(php -r "echo PHP_VERSION;")
PHP_MAJOR=$(php -r "echo PHP_MAJOR_VERSION;")
PHP_MINOR=$(php -r "echo PHP_MINOR_VERSION;")

echo "Version PHP actuelle: $PHP_VERSION"

if [ "$PHP_MAJOR" -lt 8 ] || ([ "$PHP_MAJOR" -eq 8 ] && [ "$PHP_MINOR" -lt 2 ]); then
    echo -e "${RED}‚ùå ERREUR: Laravel 12 requiert PHP 8.2+${NC}"
    echo "Votre version PHP ($PHP_VERSION) n'est pas compatible."
    echo "Veuillez mettre √† jour PHP vers 8.2+ avant de continuer."
    exit 1
else
    echo -e "${GREEN}‚úÖ Version PHP compatible ($PHP_VERSION)${NC}"
fi

# V√©rifier Composer
echo "üîç V√©rification Composer..."
if ! command -v composer &> /dev/null; then
    echo -e "${RED}‚ùå Composer n'est pas install√©${NC}"
    exit 1
else
    COMPOSER_VERSION=$(composer --version | head -n1)
    echo -e "${GREEN}‚úÖ Composer disponible: $COMPOSER_VERSION${NC}"
fi

# =============================================================================
# √âTAPE 2: BACKUP DE S√âCURIT√â
# =============================================================================

echo -e "\n${YELLOW}üíæ √âTAPE 2: BACKUP DE S√âCURIT√â${NC}"

BACKUP_DIR="storage/app/laravel12_upgrade_backup_$(date +%Y%m%d_%H%M%S)"
mkdir -p "$BACKUP_DIR"

# Backup fichiers critiques
echo "üìÅ Sauvegarde des fichiers critiques..."
cp composer.json "$BACKUP_DIR/"
cp composer.lock "$BACKUP_DIR/" 2>/dev/null || echo "Pas de composer.lock"
cp package.json "$BACKUP_DIR/"
cp package-lock.json "$BACKUP_DIR/" 2>/dev/null || echo "Pas de package-lock.json"
cp .env "$BACKUP_DIR/"

# Backup base de donn√©es
echo "üóÑÔ∏è Sauvegarde base de donn√©es..."
if command -v mysqldump &> /dev/null; then
    DB_USER=$(grep DB_USERNAME .env | cut -d '=' -f2)
    DB_NAME=$(grep DB_DATABASE .env | cut -d '=' -f2)
    if [ ! -z "$DB_USER" ] && [ ! -z "$DB_NAME" ]; then
        echo "Backup de la base $DB_NAME..."
        mysqldump -u "$DB_USER" -p "$DB_NAME" > "$BACKUP_DIR/database_backup.sql" 2>/dev/null || echo "‚ö†Ô∏è Backup DB impossible (normal en dev)"
    fi
fi

echo -e "${GREEN}‚úÖ Backup cr√©√© dans: $BACKUP_DIR${NC}"

# =============================================================================
# √âTAPE 3: NETTOYAGE PRE-UPDATE
# =============================================================================

echo -e "\n${YELLOW}üßπ √âTAPE 3: NETTOYAGE PRE-UPDATE${NC}"

# Arr√™ter les services
echo "‚èπÔ∏è Arr√™t des services..."
sudo pkill -f "php artisan serve" 2>/dev/null || true
sudo pkill -f "vite" 2>/dev/null || true
sudo pkill -f "npm run dev" 2>/dev/null || true

# Nettoyage caches Laravel
echo "üóëÔ∏è Nettoyage caches Laravel..."
php artisan optimize:clear 2>/dev/null || echo "‚ö†Ô∏è Cache Laravel non nettoy√©"

# Nettoyage d√©pendances
echo "üóëÔ∏è Nettoyage d√©pendances corrompues..."
rm -rf vendor/
rm -rf node_modules/
rm -rf composer.lock
rm -rf package-lock.json
rm -rf public/build

echo -e "${GREEN}‚úÖ Nettoyage termin√©${NC}"

# =============================================================================
# √âTAPE 4: MISE √Ä JOUR COMPOSER LARAVEL 12.x
# =============================================================================

echo -e "\n${BLUE}üì¶ √âTAPE 4: MISE √Ä JOUR COMPOSER LARAVEL 12.x${NC}"

echo "üîÑ Installation Laravel 12.x..."
if composer install --no-interaction --optimize-autoloader; then
    echo -e "${GREEN}‚úÖ Composer install r√©ussi${NC}"
else
    echo -e "${RED}‚ùå √âchec composer install${NC}"
    echo "Tentative de r√©solution des d√©pendances..."
    
    # Tentative avec update
    if composer update --no-interaction; then
        echo -e "${GREEN}‚úÖ Composer update r√©ussi${NC}"
    else
        echo -e "${RED}‚ùå √âchec critique composer${NC}"
        exit 1
    fi
fi

# V√©rifier version Laravel install√©e
echo "üîç V√©rification version Laravel..."
LARAVEL_VERSION=$(php artisan --version | grep -o 'Laravel Framework [0-9.]*')
echo "Version Laravel: $LARAVEL_VERSION"

if [[ $LARAVEL_VERSION == *"12."* ]]; then
    echo -e "${GREEN}‚úÖ Laravel 12.x install√© avec succ√®s!${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è Version Laravel inattendue: $LARAVEL_VERSION${NC}"
fi

# =============================================================================
# √âTAPE 5: MISE √Ä JOUR NPM
# =============================================================================

echo -e "\n${BLUE}üì¶ √âTAPE 5: MISE √Ä JOUR NPM${NC}"

echo "üîÑ Installation d√©pendances NPM..."
if npm install; then
    echo -e "${GREEN}‚úÖ NPM install r√©ussi${NC}"
else
    echo -e "${RED}‚ùå √âchec NPM install${NC}"
    exit 1
fi

echo "üî® Build des assets..."
if npm run build; then
    echo -e "${GREEN}‚úÖ Build Vite r√©ussi${NC}"
else
    echo -e "${RED}‚ùå √âchec build Vite${NC}"
    echo "V√©rifiez les erreurs de compilation..."
fi

# =============================================================================
# √âTAPE 6: OPTIMISATION LARAVEL 12.x
# =============================================================================

echo -e "\n${BLUE}‚ö° √âTAPE 6: OPTIMISATION LARAVEL 12.x${NC}"

echo "üîß R√©g√©n√©ration autoload..."
composer dump-autoload --optimize

echo "‚öôÔ∏è Cache Laravel..."
php artisan config:cache
php artisan route:cache 
php artisan view:cache

echo "üîó Storage link..."
php artisan storage:link 2>/dev/null || echo "Storage link existe d√©j√†"

echo -e "${GREEN}‚úÖ Optimisation termin√©e${NC}"

# =============================================================================
# √âTAPE 7: TESTS ET V√âRIFICATIONS
# =============================================================================

echo -e "\n${BLUE}üß™ √âTAPE 7: TESTS ET V√âRIFICATIONS${NC}"

echo "üîç Test configuration Laravel..."
if php artisan config:check 2>/dev/null; then
    echo -e "${GREEN}‚úÖ Configuration Laravel OK${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è Probl√®mes de configuration d√©tect√©s${NC}"
fi

echo "üîç Test des routes..."
ROUTES_COUNT=$(php artisan route:list --compact | wc -l)
echo "Nombre de routes: $ROUTES_COUNT"

echo "üîç Test base de donn√©es..."
if php artisan tinker --execute="DB::select('SELECT 1');" 2>/dev/null; then
    echo -e "${GREEN}‚úÖ Connexion base de donn√©es OK${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è Probl√®me connexion base de donn√©es${NC}"
fi

echo "üîç Test compilation assets..."
if [ -f "public/build/manifest.json" ]; then
    echo -e "${GREEN}‚úÖ Assets compil√©s correctement${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è Assets non compil√©s${NC}"
fi

# =============================================================================
# √âTAPE 8: INSTRUCTIONS FINALES
# =============================================================================

echo -e "\n${GREEN}üéâ MISE √Ä JOUR LARAVEL 12.x TERMIN√âE !${NC}"

cat << 'EOH'

=======================================================================
‚úÖ STUDIOSDB V5 PRO - LARAVEL 12.x INSTALL√â AVEC SUCC√àS!
=======================================================================

üìã R√âSUM√â DES ACTIONS EFFECTU√âES:
‚úÖ PHP 8.2+ v√©rifi√©
‚úÖ Backup de s√©curit√© cr√©√©
‚úÖ Laravel Framework mis √† jour vers 12.x
‚úÖ D√©pendances NPM mises √† jour
‚úÖ Assets recompil√©s avec Vite
‚úÖ Cache Laravel optimis√©
‚úÖ Tests de v√©rification effectu√©s

üöÄ LANCEMENT DE L'APPLICATION:

# Terminal 1 - Laravel
php artisan serve --host=0.0.0.0 --port=8000

# Terminal 2 - Vite (optionnel pour d√©veloppement)
npm run dev

üåê URLs d'acc√®s:
- Application: http://studiosdb.local:8000
- Application: http://localhost:8000

üìÅ BACKUP SAUVEGARD√â:
Les anciennes versions sont dans storage/app/laravel12_upgrade_backup_*/

üîß SI PROBL√àMES:
1. V√©rifiez les logs: tail -f storage/logs/laravel.log
2. Nettoyez le cache: php artisan optimize:clear
3. Rebuild assets: npm run build

üéØ NOUVELLES FONCTIONNALIT√âS LARAVEL 12:
- Performance am√©lior√©e
- D√©pendances √† jour (Carbon 3.x)
- Compatibilit√© PHP 8.2+
- Optimisations WebSocket et cache

=======================================================================
üöÄ Votre StudiosDB v5 Pro tourne maintenant sur Laravel 12.x !
=======================================================================
EOH

echo ""
echo -e "${BLUE}üìÅ Backup location: $BACKUP_DIR${NC}"
echo -e "${GREEN}üéØ Mise √† jour termin√©e avec succ√®s!${NC}"
