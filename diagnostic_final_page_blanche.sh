#!/bin/bash

# =============================================================================
# DIAGNOSTIC FINAL PAGE BLANCHE - TESTS ISOL√âS
# =============================================================================

PROJECT_PATH="/home/studiosdb/studiosunisdb/studiosdb_v5_pro"
cd "$PROJECT_PATH"

echo "üî¨ DIAGNOSTIC FINAL PAGE BLANCHE DASHBOARD"
echo "=========================================="
echo "Tests isol√©s pour identifier la couche probl√©matique"
echo ""

# Ajouter les routes de test si pas d√©j√† pr√©sentes
echo "üõ£Ô∏è Ajout des routes de test..."

# V√©rifier si les routes de test existent d√©j√†
if ! grep -q "dashboard-json" routes/web.php; then
    cat >> routes/web.php << 'EOT'

// ============================================================================= 
// ROUTES DE TEST DIAGNOSTIC PAGE BLANCHE - √Ä SUPPRIMER APR√àS DIAGNOSTIC
// =============================================================================

// Test 1: JSON pur (Laravel seul)
Route::get('/dashboard-json', [App\Http\Controllers\DashboardSimpleController::class, 'json'])
    ->middleware(['auth'])
    ->name('dashboard.json.test');

// Test 2: HTML pur (Laravel + Blade)  
Route::get('/dashboard-html', [App\Http\Controllers\DashboardSimpleController::class, 'html'])
    ->middleware(['auth'])
    ->name('dashboard.html.test');

// Test 3: Inertia + Vue minimal (Laravel + Inertia + Vue)
Route::get('/dashboard-simple', [App\Http\Controllers\DashboardSimpleController::class, 'simple'])
    ->middleware(['auth'])
    ->name('dashboard.simple.test');
EOT
    echo "‚úÖ Routes de test ajout√©es"
else
    echo "‚úÖ Routes de test d√©j√† pr√©sentes"
fi

# Nettoyage cache
echo "üßπ Nettoyage cache..."
php artisan route:clear
php artisan config:clear
php artisan view:clear
php artisan route:cache

# Compilation assets
echo "‚ö° Compilation assets..."
npm run build > /dev/null 2>&1

echo ""
echo "üß™ TESTS √Ä EFFECTUER MAINTENANT"
echo "==============================="
echo ""

# D√©tection automatique du serveur
if lsof -Pi :8001 -sTCP:LISTEN -t >/dev/null 2>&1; then
    BASE_URL="http://127.0.0.1:8001"
    echo "‚úÖ Serveur d√©tect√© sur port 8001"
elif lsof -Pi :8000 -sTCP:LISTEN -t >/dev/null 2>&1; then
    BASE_URL="http://127.0.0.1:8000"
    echo "‚úÖ Serveur d√©tect√© sur port 8000"
else
    BASE_URL="http://127.0.0.1:8001"
    echo "‚ö†Ô∏è Aucun serveur d√©tect√©, utilisation port 8001 par d√©faut"
fi

echo "Base URL: $BASE_URL"
echo ""

# Tests automatiques
echo "üî¨ TESTS AUTOMATIQUES"
echo "===================="

test_url() {
    local url="$1"
    local name="$2"
    local expected="$3"
    
    echo "üß™ Test: $name"
    echo "URL: $url"
    
    HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" "$url" 2>/dev/null || echo "000")
    echo "HTTP Code: $HTTP_CODE"
    
    if [ "$HTTP_CODE" = "200" ]; then
        echo "‚úÖ SUCC√àS - $name fonctionne"
    elif [ "$HTTP_CODE" = "302" ]; then
        echo "üîÑ REDIRECTION - Probablement vers login (normal si pas connect√©)"
    elif [ "$HTTP_CODE" = "500" ]; then
        echo "‚ùå ERREUR SERVEUR 500 - $name a un probl√®me"
    elif [ "$HTTP_CODE" = "000" ]; then
        echo "‚ùå CONNEXION IMPOSSIBLE - Serveur arr√™t√© ou port incorrect"
    else
        echo "‚ö†Ô∏è CODE INATTENDU: $HTTP_CODE"
    fi
    echo ""
}

# Test 1: JSON pur (Laravel seul)
test_url "$BASE_URL/dashboard-json" "JSON PUR (Laravel seul)" "200"

# Test 2: HTML pur (Laravel + Blade)
test_url "$BASE_URL/dashboard-html" "HTML PUR (Laravel + Blade)" "200"

# Test 3: Inertia + Vue minimal
test_url "$BASE_URL/dashboard-simple" "INERTIA + VUE MINIMAL" "200"

# Test 4: Dashboard original (probl√©matique)
test_url "$BASE_URL/dashboard" "DASHBOARD ORIGINAL (Probl√©matique)" "200"

# Test 5: Page membres (r√©f√©rence qui marche)
test_url "$BASE_URL/membres" "PAGE MEMBRES (R√©f√©rence qui marche)" "200"

echo "üìä INTERPR√âTATION DES R√âSULTATS"
echo "==============================="
echo ""
echo "üéØ Si JSON PUR marche (200) :"
echo "   ‚Üí Laravel + PHP + Base de donn√©es = OK"
echo ""
echo "üéØ Si HTML PUR marche (200) :"
echo "   ‚Üí Laravel + Blade + Authentification = OK"
echo ""  
echo "üéØ Si INERTIA + VUE MINIMAL marche (200) :"
echo "   ‚Üí Laravel + Inertia + Vue + Assets = OK"
echo "   ‚Üí Le probl√®me est dans Dashboard/Admin.vue ou DashboardController"
echo ""
echo "üéØ Si DASHBOARD ORIGINAL ne marche pas (blanc/500) :"
echo "   ‚Üí Probl√®me sp√©cifique dans le code du dashboard"
echo ""
echo "üéØ Si PAGE MEMBRES marche (200) :"
echo "   ‚Üí Confirmation que le syst√®me global fonctionne"

echo ""
echo "üåê LIENS DE TEST DIRECTS"
echo "======================="
echo "1. JSON Test: $BASE_URL/dashboard-json"
echo "2. HTML Test: $BASE_URL/dashboard-html" 
echo "3. Vue Test: $BASE_URL/dashboard-simple"
echo "4. Dashboard Original: $BASE_URL/dashboard"
echo "5. Membres (r√©f√©rence): $BASE_URL/membres"

echo ""
echo "üìã PROCHAINES √âTAPES"
echo "==================="
echo "1. Testez ces 5 URLs dans votre navigateur"
echo "2. Notez lesquelles fonctionnent et lesquelles sont blanches"
echo "3. Regardez la console du navigateur (F12) pour les erreurs JavaScript"
echo "4. Communiquez-moi les r√©sultats pour diagnostic final"

echo ""
echo "üîß POUR VOIR LES LOGS EN TEMPS R√âEL :"
echo "tail -f storage/logs/laravel.log"

echo ""
echo "‚úÖ DIAGNOSTIC PR√âPAR√â - Testez maintenant les URLs ci-dessus !"
