#!/bin/bash

# StudiosDB - Script de Commit et Sauvegarde
# Am√©lioration: Corrections responsive + README.md complet

echo "=== STUDIOSDB COMMIT & SAVE ==="
echo "Corrections responsive + README.md pour GitHub"
echo

# V√©rifier le statut git
echo "üìã Statut des fichiers modifi√©s :"
git status --porcelain

echo
echo "üì¶ Ajout des fichiers au staging..."

# Ajouter les fichiers de corrections responsive
git add resources/js/Pages/Dashboard.vue
git add resources/js/Components/UI/StatCard.vue  
git add resources/js/Pages/Cours/Index.vue

# Ajouter le nouveau README.md
git add README.md

# Ajouter ce script lui-m√™me
git add commit-responsive-readme.sh

echo "‚úÖ Fichiers ajout√©s au staging"

echo
echo "üíæ Cr√©ation du commit..."

# Message de commit d√©taill√©
COMMIT_MSG="feat: corrections responsive design + README.md GitHub complet

üé® Corrections UI/UX Responsive:
- Dashboard: police responsive (text-xl sm:text-2xl xl:text-3xl) + truncate
- StatCard: flex-1 + min-w-0 pour √©viter d√©bordement chiffres  
- Cours: boutons actions hover-only align√©s sur module Membres
- Actions: taille uniforme (p-1.5, w-4 h-4, colonne w-24)
- UX: comportement hover coh√©rent dans toute l'application

üìö Documentation GitHub:
- README.md complet avec instructions installation d√©taill√©es
- Sections: pr√©requis, configuration, d√©ploiement, architecture
- Standards d√©veloppement et contribution
- Support et maintenance

‚ú® Am√©liorations:
- R√©sout d√©bordement stats √† 100% zoom
- Interface coh√©rente hover-only dans toutes les tables  
- Documentation professionnelle pour nouveau d√©veloppeurs
- Setup simplifi√© avec commandes √©tape par √©tape

Impact: UX uniforme + onboarding d√©veloppeurs facilit√©"

# Committer avec le message d√©taill√©
git commit -m "$COMMIT_MSG"

if [ $? -eq 0 ]; then
    echo "‚úÖ Commit cr√©√© avec succ√®s"
    echo
    echo "üîÑ Push vers le repository..."
    
    # Push vers origin (si configur√©)
    git push origin main 2>/dev/null || git push origin master 2>/dev/null || {
        echo "‚ö†Ô∏è  Push automatique √©chou√©. Ex√©cutez manuellement :"
        echo "   git push origin main"  
        echo "   (ou git push origin master selon votre branche)"
    }
    
    echo
    echo "üìä R√©sum√© du commit :"
    git log -1 --oneline
    
    echo
    echo "üéØ Prochaines √©tapes :"
    echo "   1. V√©rifier le push sur GitHub"
    echo "   2. Continuer d√©veloppement module Utilisateurs (J4)"
    echo "   3. Finaliser module Membres (J5)"
    
else
    echo "‚ùå Erreur lors du commit"
    echo "V√©rifiez les conflits ou permissions"
fi

echo
echo "=== FIN SCRIPT COMMIT ==="
