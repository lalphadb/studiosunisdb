#!/bin/bash

# =====================================================
# STUDIOSDB - SCRIPT DE CORRECTION PHASE 1
# Infrastructure ecoles + Composants UI
# =====================================================

echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
echo "‚ïë   STUDIOSDB - CORRECTION PHASE 1          ‚ïë"
echo "‚ïë   Infrastructure Multi-√âcole + UI         ‚ïë"
echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
echo ""

# Changement vers le r√©pertoire du projet
cd /home/studiosdb/studiosunisdb

# 1. Clear des caches
echo "üßπ Nettoyage des caches..."
php artisan optimize:clear

# 2. Ex√©cution des migrations
echo ""
echo "üì¶ Ex√©cution des nouvelles migrations..."
php artisan migrate --force

# 3. Ex√©cution du seeder pour l'√©cole
echo ""
echo "üè¢ Cr√©ation de l'√©cole par d√©faut..."
php artisan db:seed --class=EcoleSeeder --force

# 4. Mise √† jour des permissions
echo ""
echo "üîê V√©rification des permissions..."
php artisan permission:cache-reset

# 5. Compilation des assets
echo ""
echo "üì¶ Compilation des assets Vue/Tailwind..."
npm run build

# 6. Cache de configuration
echo ""
echo "‚ö° Optimisation des caches..."
php artisan config:cache
php artisan route:cache
php artisan view:cache

# 7. V√©rifications finales
echo ""
echo "‚úÖ V√©rifications finales..."
echo ""

# V√©rifier que la table ecoles existe
php artisan tinker --execute="echo 'Table ecoles: ' . (\Schema::hasTable('ecoles') ? '‚úÖ OK' : '‚ùå ERREUR');"

# V√©rifier qu'il y a au moins une √©cole
php artisan tinker --execute="echo '√âcole par d√©faut: ' . (\App\Models\Ecole::count() > 0 ? '‚úÖ ' . \App\Models\Ecole::first()->nom : '‚ùå AUCUNE');"

# V√©rifier les composants UI
echo ""
echo "Composants UI:"
for file in AnimatedNumber ModernButton ModernNotification ModernStatsCard; do
    if [ -s "resources/js/Components/UI/$file.vue" ]; then
        echo "  ‚úÖ $file.vue ($(wc -c < resources/js/Components/UI/$file.vue) bytes)"
    else
        echo "  ‚ùå $file.vue manquant ou vide"
    fi
done

echo ""
echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
echo "‚ïë   ‚úÖ PHASE 1 TERMIN√âE !                   ‚ïë"
echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
echo ""
echo "Prochaines √©tapes:"
echo "  1. Tester la compilation: npm run dev"
echo "  2. V√©rifier les pages: php artisan serve"
echo "  3. Continuer avec Phase 2 (Membres) et Phase 3 (Cours)"
echo ""
